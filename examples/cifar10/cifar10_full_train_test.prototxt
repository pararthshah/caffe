name: "CIFAR10_full"
layers {
  name: "cifar"
  type: DATA
  top: "data"
  top: "label"
  data_param {
    source: "examples/cifar10/cifar10_train_leveldb"
    batch_size: 100
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  include: { phase: TRAIN }
}
layers {
  name: "cifar"
  type: DATA
  top: "data"
  top: "label"
  data_param {
    source: "examples/cifar10/cifar10_test_leveldb"
    batch_size: 100
  }
  transform_param {
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  include: { phase: TEST }
}
layers {
  name: "conv1"
  type: CONVOLUTION
  bottom: "data"
  top: "conv1"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "relu1"
  type: RELU
  bottom: "conv1"
  top: "conv1"
}
layers {
  name: "pool1"
  type: POOLING
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  name: "conv2"
  type: CONVOLUTION
  bottom: "pool1"
  top: "conv2"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "relu2"
  type: RELU
  bottom: "conv2"
  top: "conv2"
}
layers {
  name: "pool2"
  type: POOLING
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layers {
  name: "conv3"
  type: CONVOLUTION
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "relu3"
  type: RELU
  bottom: "conv3"
  top: "conv3"
}
layers {
  name: "pool3"
  type: POOLING
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layers {
  name: "conv4"
  type: CONVOLUTION
  bottom: "pool3"
  top: "conv4"
  convolution_param {
    num_output: 1024
    pad: 0
    kernel_size: 4
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layers {
  name: "conv5"
  type: CONVOLUTION
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 9
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "prob"
  type: SOFTMAX
  bottom: "conv5"
  top: "prob"
}

layers {
  name: "conv1_fine"
  type: CONVOLUTION
  bottom: "data"
  top: "conv1_fine"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "relu1_fine"
  type: RELU
  bottom: "conv1_fine"
  top: "conv1_fine"
}
layers {
  name: "conv2_fine"
  type: CONVOLUTION
  bottom: "conv1_fine"
  top: "conv2_fine"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "relu2_fine"
  type: RELU
  bottom: "conv2_fine"
  top: "conv2_fine"
}
layers {
  name: "conv3_fine"
  type: CONVOLUTION
  bottom: "conv2_fine"
  top: "conv3_fine"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "relu3_fine"
  type: RELU
  bottom: "conv3_fine"
  top: "conv3_fine"
}
layers {
  name: "conv4_fine"
  type: CONVOLUTION
  bottom: "conv3_fine"
  top: "conv4_fine"
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 16
    stride: 8
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layers {
  name: "conv_reshape"
  type: RESHAPE_VOLUME
  bottom: "prob"
  top: "conv_reshape"
  reshape_volume_param {
    out_height: 3
    out_width: 3
    out_channels: 128
  }
}

layers {
  name: "eltwise_layer"
  type: ELTWISE
  bottom: "conv4_fine"
  bottom: "conv_reshape"
  top: "weighted_conv_fine"
  eltwise_param {
    operation: PROD
  }
}
      
layers {
  name: "ip1_fine"
  type: INNER_PRODUCT
  bottom: "weighted_conv_fine"
  top: "ip1_fine"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 250
  weight_decay: 0
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}

layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "ip1_fine"
  bottom: "label"
  top: "accuracy"
  include: { phase: TEST }
}
layers {
  name: "loss"
  type: SOFTMAX_LOSS
  bottom: "ip1_fine"
  bottom: "label"
  top: "loss"
}
